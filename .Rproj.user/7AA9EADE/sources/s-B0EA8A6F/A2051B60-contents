
# Configurar el directorio 

setwd("")

#Preparar el espacio de trabajo

rm(list = ls()) #Borrar todos los objetos del espacio de trabajo
(scipen=999) #Desactivar notacion cientifica

#1.Cargar librerias

pacman::p_load(dplyr,
               sjmisc,
               sjlabelled,
               car,
               stargazer,
               MASS,
               scatterplot3d, 
               poLCA, 
               summarytools,
               psych,
               ggplot2, 
               reshape,
               writexl,
               survey,
               srvyr,
               Publish,
               PropCIs,
               DescTools) # Herramienta para IC

#2.Cargar base de datos

base2019 <-read.csv2("ene2019.csv",sep="," )
base2020 <-read.csv2("ene2020.csv")

#3.Seleccion de variables a utilizar
proc_base2019 <- base2019 %>% dplyr::select(ano_trimestre,#Año y trimestre bbdd
                                           region, # región donde vive el encuestado,
                                           b13_rev4cl_caenes, #Rama de actividad económica de la empresa que le paga al ocupado, basado en la CIIU
                                           b12, # contratado o subcontratado
                                           b9, #duracion del contrato, indefinido o fijo
                                           b10, #extension del contrato REVISAR 
                                           b8, # contrato escrito u oral
                                           b7a_1, #cotiza en el sistema previsional
                                           b7a_2, # cotiza en el sistema de salud,
                                           b7a_3, #seguro cesantia
                                           b16, #lugar realizacion tareas 
                                           c2_1_3, # horas semanales trabajadas habitualmente
                                           sexo,#Señala el sexo de cada uno de las personas encuestadas
                                           tramo_edad,
                                           fact, #factor de expansión
                                           cine) #Clasificación Internacional de Nivel Educacional


proc_base2020 <- base2020 %>% dplyr::select(ano_trimestre,#Año y trimestre bbdd
                                            region, # región donde vive el encuestado,
                                            b13_rev4cl_caenes, #Rama de actividad económica de la empresa que le paga al ocupado, basado en la CIIU
                                            b12, # contratado o subcontratado
                                            b9, #duracion del contrato, indefinido o fijo
                                            b10, #extension del contrato REVISAR 
                                            b8, # contrato escrito u oral
                                            b7a_1, #cotiza en el sistema previsional
                                            b7a_2, # cotiza en el sistema de salud,
                                            b7a_3, # seguro cesantia
                                            b16, #lugar realizacion tareas 
                                            c2_1_3, # horas semanales trabajadas habitualmente
                                            sexo,#Señala el sexo de cada uno de las personas encuestadas
                                            tramo_edad,
                                            fact_cal,
                                            cine) #Clasificación Internacional de Nivel Educacional


# ---- 4. preparacion ----

#---- 4.1. Renombrar variables----

proc_base2019 <- proc_base2019 %>% dplyr::rename("ciiu" = b13_rev4cl_caenes, 
                                                 "subcontrato" = b12,
                                                 "duracion_contrato" = b9,
                                                 "extension_contrato" = b10,#sacar
                                                 "formato_contrato" = b8,
                                                 "cotiza_pension" = b7a_1,
                                                 "cotiza_salud" = b7a_2,
                                                 "lugar_trabajo" = b16,
                                                 "seguro_cesantia" = b7a_3,
                                                 "horas_semana" = c2_1_3)

proc_base2020 <- proc_base2020 %>% dplyr::rename("ciiu" = b13_rev4cl_caenes, 
                                                 "subcontrato" = b12,
                                                 "duracion_contrato" = b9,   
                                                 "extension_contrato" = b10, #sacar
                                                 "formato_contrato" = b8,    
                                                 "cotiza_pension" = b7a_1,   
                                                 "cotiza_salud" = b7a_2,     
                                                 "lugar_trabajo" = b16,   
                                                 "seguro_cesantia" = b7a_3,
                                                 "horas_semana" = c2_1_3)    
# ---- ponderaddores ----
class(base2019$fact)

CASEN_POND <- svydesign(data = base2019, id=~1, weights = ~fact)
haha <- as_survey_design(data %>% select_(where(~fact)),
  ids = 1)

pobrezamulti <- proc_base2019 %>% 
  group_by(duracion_contrato) %>%
  summarise(proporcion = survey_mean(vartype = "ci", level = 0.95, na.rm = TRUE),
            n = unweighted(n()))

#---- preguntar filtros ----
#2019
proc_base2019$ciiu <- recode(proc_base2019$ciiu,"c(1, 2, 3, 6)=NA")
proc_base2019 <- proc_base2019[!is.na(proc_base2019$ciiu),]


#2020
proc_base2020$ciiu <- recode(proc_base2020$ciiu,"c(1, 2, 3, 6)=NA")
proc_base2020 <- proc_base2020[!is.na(proc_base2020$ciiu),]

#Filtrar por subcontrato
proc_base2019 <- filter(proc_base2019, subcontrato %in% c(2, 3, 4))
proc_base2020 <- filter(proc_base2020, subcontrato %in% c(2, 3, 4))

# ---- Frecuecnias con intervalos de confianza ----
#Duracion del contrato, indefinido o fijo (X1)
#2019
freq(proc_base2019$duracion_contrato) #bajó el fijo, probablemente no recontrataron
5052  #Obtener casos válidos (n - casos perdidos).
tablaDC19<-table(proc_base2019$duracion_contrato) 
tabla_propDC19<-prop.table(tablaDC19) 
tabla_propDC19 
tabla_Lim_dc19<-((tabla_propDC19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_dc19
tabla_Lim_dc19$IC1 <- exactci(x = 1753, n = 5052, conf.level = 0.95) 
tabla_Lim_dc19$IC2 <- exactci(x = 3299, n = 5052, conf.level = 0.95) 
tabla_Lim_dc19

#2020
proc_base2020$duracion_contrato <- recode(proc_base2020$duracion_contrato,"c(88, 99)=NA")
freq(proc_base2020$duracion_contrato) 
summary(proc_base2020$duracion_contrato) #Obtener frecuencias absolutas y número de casos perdidos.
2719   -20   #Obtener casos válidos (n - casos perdidos).
tablaDC20<-table(proc_base2020$duracion_contrato) 
tabla_propDC20<-prop.table(tablaDC20) 
tabla_propDC20 
tabla_Lim_dc20<-((tabla_propDC20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_dc20
tabla_Lim_dc20$IC1 <- exactci(x = 838, n = 2699, conf.level = 0.95) 
tabla_Lim_dc20$IC2 <- exactci(x = 1861, n = 2699, conf.level = 0.95) 


#Formato contrato


#2019
freq(proc_base2019$formato_contrato) 
5052-72299  #Obtener casos válidos (n - casos perdidos).
tablaFC19<-table(proc_base2019$formato_contrato) 
tabla_propFC19<-prop.table(tablaFC19) 
tabla_propFC19 
tabla_Lim_fc19<-((tabla_propFC19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_fc19
tabla_Lim_fc19$IC1 <- exactci(x =  4922, n = 5052, conf.level = 0.95) 
tabla_Lim_fc19$IC2 <- exactci(x =  130, n = 5052, conf.level = 0.95) 

#2020
proc_base2020$formato_contrato <- recode(proc_base2020$formato_contrato,"c(88, 99)=NA")
freq(proc_base2020$formato_contrato) #bajó el contrato oral, quizás por la misma razón. La variación es mínima
2719   - 8  #Obtener casos válidos (n - casos perdidos).
tablaFC20<-table(proc_base2020$formato_contrato) 
tabla_propFC20<-prop.table(tablaFC20) 
tabla_propFC20 
tabla_Lim_fc20<-((tabla_propFC20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_fc20
tabla_Lim_fc20$IC1 <- exactci(x =   2643, n = 2711, conf.level = 0.95) 
tabla_Lim_fc20$IC2 <- exactci(x =  68, n = 2711, conf.level = 0.95) 


#Cotiza pension (X3)

#2019
proc_base2019$cotiza_pension <- recode(proc_base2019$cotiza_pension,"c(88)=NA")
freq(proc_base2019$cotiza_pension) 
5052- 18  #Obtener casos válidos (n - casos perdidos).
tablaCP19<-table(proc_base2019$cotiza_pension) 
tabla_propCP19<-prop.table(tablaCP19) 
tabla_propCP19 
tabla_Lim_cp19<-((tabla_propCP19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_cp19
tabla_Lim_cp19$IC1 <- exactci(x =  4738, n = 5034, conf.level = 0.95) 
tabla_Lim_cp19$IC2 <- exactci(x =  296, n = 5034, conf.level = 0.95) 

#2020
proc_base2020$cotiza_pension <- recode(proc_base2020$cotiza_pension,"c(77, 88, 99)=NA")
freq(proc_base2020$cotiza_pension) 
2719   - 123  #Obtener casos válidos (n - casos perdidos).
tablaCP20<-table(proc_base2020$cotiza_pension) 
tabla_propCP20<-prop.table(tablaCP20) 
tabla_propCP20 
tabla_Lim_cp20<-((tabla_propCP20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_cp20
tabla_Lim_cp20$IC1 <- exactci(x =  2509, n = 2596, conf.level = 0.95) 
tabla_Lim_cp20$IC2 <- exactci(x =  87, n = 2596, conf.level = 0.95) 

#seguro cesantia (X4)
#2019
proc_base2019$seguro_cesantia <- recode(proc_base2019$seguro_cesantia,"c(88)=NA")
freq(proc_base2019$seguro_cesantia)
5052-105  #Obtener casos válidos (n - casos perdidos).
tablaCS19<-table(proc_base2019$seguro_cesantia) 
tabla_propCS19<-prop.table(tablaCS19) 
tabla_propCS19 
tabla_Lim_cs19<-((tabla_propCS19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_cs19
tabla_Lim_cs19$IC1 <- exactci(x =  3918, n = 4947, conf.level = 0.95) 
tabla_Lim_cs19$IC2 <- exactci(x =  1029, n = 4947, conf.level = 0.95) 


#2020
proc_base2020$seguro_cesantia <- recode(proc_base2020$seguro_cesantia,"c(77, 88, 99)=NA")
freq(proc_base2020$seguro_cesantia)
2719   -171  #Obtener casos válidos (n - casos perdidos).
tablaCS20<-table(proc_base2020$seguro_cesantia) 
tabla_propCS20<-prop.table(tablaCS20) 
tabla_propCS20 
tabla_Lim_cs20<-((tabla_propCS20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_cs20
tabla_Lim_cs20$IC1 <- exactci(x =  1955, n = 2548, conf.level = 0.95) 
tabla_Lim_cs20$IC2 <- exactci(x =  593, n = 2548, conf.level = 0.95) 

#Lugar trabajo (X5)
#2019
proc_base2019$lugar_trabajo <-car::recode(proc_base2019$lugar_trabajo,"c(1,2)=1; c(3,4,5)=2; c(6)=3; c(7, 8)=4; c(9)=NA")
freq(proc_base2019$lugar_trabajo)
5052-11  #Obtener casos válidos (n - casos perdidos).
tablaLT19<-table(proc_base2019$lugar_trabajo) 
tabla_propLT19<-prop.table(tablaLT19) 
tabla_propLT19 
tabla_Lim_lt19<-((tabla_propLT19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_lt19
tabla_Lim_lt19$IC1 <- exactci(x =  4231, n = 5041, conf.level = 0.95) 
tabla_Lim_lt19$IC2 <- exactci(x =  20, n = 5041, conf.level = 0.95) 
tabla_Lim_lt19$IC3 <- exactci(x =  411, n = 5041, conf.level = 0.95) 
tabla_Lim_lt19$IC4 <- exactci(x =  379, n = 5041, conf.level = 0.95)

#2020
proc_base2020$lugar_trabajo <-car::recode(proc_base2020$lugar_trabajo,"c(1,2)=1; c(3,4,5)=2; c(6)=3; c(7, 8)=4; c(88, 99, 9)=NA")
freq(proc_base2020$lugar_trabajo) #5 corresponde a trabajo en casa
2719   -20   #Obtener casos válidos (n - casos perdidos).
tablaLT20<-table(proc_base2020$lugar_trabajo) 
tabla_propLT20<-prop.table(tablaLT20) 
tabla_propLT20 
tabla_Lim_lt20<-((tabla_propLT20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_lt20
tabla_Lim_lt20$IC1 <- exactci(x =  1759, n = 2699, conf.level = 0.95) 
tabla_Lim_lt20$IC2 <- exactci(x =  488, n = 2699, conf.level = 0.95)
tabla_Lim_lt20$IC3 <- exactci(x =  219, n = 2699, conf.level = 0.95)
tabla_Lim_lt20$IC4 <- exactci(x =  233, n = 2699, conf.level = 0.95)

#Horas semana (x6)
#2019
proc_base2019$horas_semana <- car::recode(proc_base2019$horas_semana,"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)=1; 
                                                                      c(31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44)=2; 
                                                                      c(45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 105, 108, 112, 119, 121, 122, 126, 140, 158)=3")


freq(proc_base2019$horas_semana) 
5052-0   #Obtener casos válidos (n - casos perdidos).
tablaHS19<-table(proc_base2019$horas_semana) 
tabla_propHS19<-prop.table(tablaHS19) 
tabla_propHS19 
tabla_Lim_hs19<-((tabla_propHS19)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_hs19
tabla_Lim_hs19$IC1 <- exactci(x =  421, n = 5052, conf.level = 0.95) 
tabla_Lim_hs19$IC2 <- exactci(x =  1795, n = 5052, conf.level = 0.95) 
tabla_Lim_hs19$IC3 <- exactci(x =  2836, n = 5052, conf.level = 0.95) 


#2020
proc_base2020$horas_semana <- car::recode(proc_base2020$horas_semana,"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)=1; 
                                                                      c(31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44)=2; 
                                                                      c(45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 90, 91, 92, 96, 98, 101, 104, 105, 108, 112, 114,119, 120, 129, 133, 144, 168)=3;   
                                                                      c(888, 999)=NA")

freq(proc_base2020$horas_semana)
2719   -2  #Obtener casos válidos (n - casos perdidos).
tablaHS20<-table(proc_base2020$horas_semana) 
tabla_propHS20<-prop.table(tablaHS20) 
tabla_propHS20 
tabla_Lim_hs20<-((tabla_propHS20)*100) #Cálculo de porcentajes como objeto.
tabla_Lim_hs20
tabla_Lim_hs20$IC1 <- exactci(x =  207, n = 2717, conf.level = 0.95) 
tabla_Lim_hs20$IC2 <- exactci(x =  1271, n = 2717, conf.level = 0.95)
tabla_Lim_hs20$IC3 <- exactci(x =  1239, n = 2717, conf.level = 0.95)

#---- variables cruzadas----

#Sexo

#Duracion del contrato, indefinido o fijo (X1)

ctable(proc_base2019$duracion_contrato, proc_base2019$sexo)
ctable(proc_base2020$duracion_contrato, proc_base2020$sexo)

#Formato contrato(X2)
ctable(proc_base2019$formato_contrato, proc_base2019$sexo)
ctable(proc_base2020$formato_contrato, proc_base2020$sexo)

#Cotiza pension (X3)
ctable(proc_base2019$cotiza_pension, proc_base2019$sexo)
ctable(proc_base2020$cotiza_pension, proc_base2020$sexo)

#seguro cesantia (X4)
ctable(proc_base2019$seguro_cesantia, proc_base2019$sexo)
ctable(proc_base2020$seguro_cesantia, proc_base2020$sexo)

#Lugar trabajo (X5)
ctable(proc_base2019$lugar_trabajo, proc_base2019$sexo)
ctable(proc_base2020$lugar_trabajo, proc_base2020$sexo)

#Horas semana (x6)
ctable(proc_base2019$horas_semana, proc_base2019$sexo)
ctable(proc_base2020$horas_semana, proc_base2020$sexo)

#educación 
proc_base2019$cine <-car::recode(proc_base2019$cine,"c(1)=1; c(2, 3, 4)=2; c(5)=3; c(6, 7)=4; c(9, 8); c(999)=NA")
freq(proc_base2019$cine) 
proc_base2020$cine <-car::recode(proc_base2020$cine,"c(1)=1; c(2, 3, 4)=2; c(5)=3; c(6, 7)=4; c(9, 8); c(999)=NA")
freq(proc_base2020$cine)

#Duracion del contrato, indefinido o fijo (X1)

ctable(proc_base2019$duracion_contrato, proc_base2019$cine)
ctable(proc_base2020$duracion_contrato, proc_base2020$cine)

#Formato contrato(X2)
ctable(proc_base2019$formato_contrato, proc_base2019$cine)
ctable(proc_base2020$formato_contrato, proc_base2020$cine)

#Cotiza pension (X3)
ctable(proc_base2019$cotiza_pension, proc_base2019$cine)
ctable(proc_base2020$cotiza_pension, proc_base2020$cine)

#seguro cesantia (X4)
ctable(proc_base2019$seguro_cesantia, proc_base2019$cine)
ctable(proc_base2020$seguro_cesantia, proc_base2020$cine)

#Lugar trabajo (X5)
ctable(proc_base2019$lugar_trabajo, proc_base2019$cine)
ctable(proc_base2020$lugar_trabajo, proc_base2020$cine)

#Horas semana (x6)
ctable(proc_base2019$horas_semana, proc_base2019$cine)
ctable(proc_base2020$horas_semana, proc_base2020$cine)

#Edad conversar con las demás
proc_base2019$tramo_edad <-car::recode(proc_base2019$tramo_edad,"c(1)=1; c(2, 3)=2; c(4, 5, 6, 7)=3; c(8, 9, 19)=4; c(11, 12)=5")
freq(proc_base2019$tramo_edad)
proc_base2020$tramo_edad <-car::recode(proc_base2020$tramo_edad,"c(1)=1; c(2, 3)=2; c(4, 5, 6, 7)=3; c(8, 9, 19)=4; c(11, 12)=5")
freq(proc_base2020$tramo_edad)

#Duracion del contrato, indefinido o fijo (X1)

ctable(proc_base2019$duracion_contrato, proc_base2019$tramo_edad)
ctable(proc_base2020$duracion_contrato, proc_base2020$tramo_edad)

#Formato contrato(X2)
ctable(proc_base2019$formato_contrato, proc_base2019$tramo_edad)
ctable(proc_base2020$formato_contrato, proc_base2020$tramo_edad)

#Cotiza pension (X3)
ctable(proc_base2019$cotiza_pension, proc_base2019$tramo_edad)
ctable(proc_base2020$cotiza_pension, proc_base2020$tramo_edad)

#seguro cesantia (X4)
ctable(proc_base2019$seguro_cesantia, proc_base2019$tramo_edad)
ctable(proc_base2020$seguro_cesantia, proc_base2020$tramo_edad)

#Lugar trabajo (X5)
ctable(proc_base2019$lugar_trabajo, proc_base2019$tramo_edad)
ctable(proc_base2020$lugar_trabajo, proc_base2020$tramo_edad)

#Horas semana (x6)
ctable(proc_base2019$horas_semana, proc_base2019$tramo_edad)
ctable(proc_base2020$horas_semana, proc_base2020$tramo_edad)

#CIIU-09
proc_base2019$ciiu <- recode(proc_base2019$ciiu,"c(1, 2, 3, 6)=NA")
freq(proc_base2019$ciiu)
proc_base2020$ciiu <- recode(proc_base2020$ciiu,"c(1, 2, 3, 6, 999)=NA")
freq(proc_base2020$ciiu)

#Duracion del contrato, indefinido o fijo (X1)

ctable(proc_base2019$duracion_contrato, proc_base2019$ciiu)
ctable(proc_base2020$duracion_contrato, proc_base2020$ciiu)

#Formato contrato(X2)
ctable(proc_base2019$formato_contrato, proc_base2019$ciiu)
ctable(proc_base2020$formato_contrato, proc_base2020$ciiu)

#Cotiza pension (X3)
ctable(proc_base2019$cotiza_pension, proc_base2019$ciiu)
ctable(proc_base2020$cotiza_pension, proc_base2020$ciiu)

#seguro cesantia (X4)
ctable(proc_base2019$seguro_cesantia, proc_base2019$ciiu)
ctable(proc_base2020$seguro_cesantia, proc_base2020$ciiu)

#Lugar trabajo (X5)
ctable(proc_base2019$lugar_trabajo, proc_base2019$ciiu)
ctable(proc_base2020$lugar_trabajo, proc_base2020$ciiu)

#Horas semana (x6)
ctable(proc_base2019$horas_semana, proc_base2019$ciiu)
ctable(proc_base2020$horas_semana, proc_base2020$ciiu)

# ---- 1. DIAGRAMA DE BARRAS ----

#---- verlo segun los datos de arriba----
# Gráfico de barras de una variable (NSE), segementando las barras según una segunda variable (sexo) 
#ggplot(data = proc_base2019, aes(x = sexo, fill = ciiu)) + geom_bar(fill = "blue") + ggtitle(label = "CIIU-09")
# ---- 2. HISTOGRAMAS ----
# Histograma de frecuencias, variable "índice justificación protestas"
#ggplot(data = proc_base2019, aes(x = ciiu)) + geom_histogram() + ggtitle(label = "CIIU-09")
# Histograma de densidad, variable "índice justificación protestas", editando forma de la curva
#ggplot(data = proc_base2019, aes(x = ciiu)) + geom_density(color = "green", fill = "green", alpha = 0.2) + ggtitle(label = "Justificación Protestas")
# ---- 3. GRÁFICOS DE CAJAS: MEDIANA, Q1, Q3, RIC, CASOS ATÍPICOS ----
# Diagrama de cajas, variable "índice justificación protestas"
#ggplot(data = proc_base2019, aes(x = ciiu)) + geom_boxplot() + ggtitle(label = "Justificación Protestas")
# Diagrama de cajas, variable "índice justificación protestas" según variable NSE
#ggplot(data = proc_base2019, aes(x = ciiu, fill = sexo)) + geom_boxplot() + ggtitle(label = "Justestas")
# ---- 4. GRILLA DE GRÁFICOS -----
# Histograma variable "índice justificación protestas" según variable NSE
#ggplot(data = proc_base2019, aes(x = ciiu, fill = tramo_edad)) + geom_histogram(fill = "blue") + ggtitle(label = "Justificación Protestas") + facet_grid(.~NSE)
# Histograma variable "índice justificación protestas" según variable sexo
#ggplot(data = CEP, aes(x = Protesta)) + geom_histogram(fill = "#87CEFA") + ggtitle(label = "Justificación Protestas") + facet_grid(.~sexo)
# ---- 3. GRÁFICOS PONDERADOS (ESI) ----
# Gráfico de barras con y sin ponderador aplicado
#ggplot(esi_ocupados, aes(x = sexo)) + geom_bar()
#ggplot(esi_ocupados, aes(x = sexo, weight = fact_per )) + geom_bar()
# Como vimos con frecuencias, distribución proporcional no varía pero sí N total.
# Histograma de frecuencias con y sin ponderador aplicado
#ggplot(esi_ocupados, aes(x = ing_t_p)) + geom_histogram() + xlim(NA, 1500000) 
# (*)
#ggplot(esi_ocupados, aes(x = ing_t_p, weight = fact_per )) + geom_histogram() + xlim(NA, 1500000)
# (*) Se define un límite más bajo que el valor máximo, para poder apreciar el gráfico


