levels = c('Hombre', 'Mujer')),
educacion = car::recode(.$educacion, recodes = c("1 = 'Nunca estudio';
2 = 'Educacion preescolar';
3 = 'Educacion primaria (nivel 1)';
4 = 'Educacion primaria (nivel 2)';
5 = 'Educacion secundaria';
6 = 'Educacion tecnica (superior no universitaria)';
7 = 'Educacion universitaria';
8 = 'Postitulos y maestria';
9 = 'Doctorado'"),
as.factor = T,
levels = c('Nunca estudio',
'Educacion preescolar',
'Educacion primaria (nivel 1)',
'Educacion primaria (nivel 2)',
'Educacion secundaria',
'Educacion tecnica (superior no universitaria)',
'Educacion universitaria',
'Postitulos y maestria',
'Doctorado'))) %>%
mutate_at(vars("cond_vacaciones", "cond_enfermedad", "cond_maternidad", "cond_guarderia", "cotiza_prev", "cotiza_salud", "cotiza_seguro"), ~(car::recode(., recodes = c("1 = 'Si'; 2 = 'No'"), as.factor = T))) %>%
mutate(ingresos = factor(.$ingresos, levels = c("$0 a $291.974",
"$291.975 a $380.500",
"$380.501 a $500.000",
"$500.001 a $779.787",
"$779.788 o más")),
horas = factor(.$horas, levels = c("Igual o menor a 30 horas semanales",
"Entre 31 y 45 horas semanales",
"Mayor a 45 horas semanales"))) %>%
mutate_at(vars("contrato", "contrato_duracion", "contrato_sub", "cotiza_prev", "cotiza_salud", "cotiza_seguro", "lugar_trab", "cond_vacaciones", "cond_enfermedad", "cond_maternidad", "cond_guarderia"), ~(car::recode(., recodes = "c(77, 88, 99) = NA"))) %>%
mutate_at(vars(c("horas", "educacion")), ~(car::recode(., recodes = "c(888, 999) = NA")))
#(In)estabilidad
data_proc$contrato = set_label(data_proc$contrato, "Existencia de contrato")
data_proc$contrato_sub = set_label(data_proc$contrato_sub, "Acuerdo de trabajo")
data_proc$cotiza_salud = set_label(data_proc$cotiza_salud, "Cotizacion en salud")
#(In)suficiencia
data_proc$ingresos = set_label(data_proc$ingresos, "Quintiles de ingreso")
#Condiciones de trabajo
data_proc$lugar_trab = set_label(data_proc$lugar_trab, "Lugar de trabajo")
data_proc$cond_vacaciones = set_label(data_proc$cond_vacaciones, "Derecho a vacaciones")
data_proc$cond_guarderia = set_label(data_proc$cond_guarderia, "Derecho a guarderia infantil")
#Diseño muestral
data_proc$exp <- set_label(data_proc$exp, 'Ponderador')
data_proc$edad <- set_label(data_proc$edad, 'Edad')
data_proc$educacion <- set_label(data_proc$educacion, 'Educacion')
data_proc$cond_maternidad = set_label(data_proc$cond_maternidad, "Derecho a dias pagos por pa/maternidad")
data_proc$cond_enfermedad = set_label(data_proc$cond_enfermedad, "Derecho a dias pagos por enfermedad")
#(In)suficiencia
data_proc$ingresos = set_label(data_proc$ingresos, "Quintiles de ingreso")
#(In)seguridad
data_proc$cotiza_prev = set_label(data_proc$cotiza_prev, "Cotizacion en prevision")
data_proc$cotiza_salud = set_label(data_proc$cotiza_salud, "Cotizacion en salud")
data_proc$cotiza_seguro = set_label(data_proc$cotiza_seguro, "Cotizacion en seguro de desempleo")
#(In)estabilidad
data_proc$contrato = set_label(data_proc$contrato, "Existencia de contrato")
data_proc$contrato_duracion = set_label(data_proc$contrato_duracion, "Duracion de contrato")
data_proc$contrato_sub = set_label(data_proc$contrato_sub, "Acuerdo de trabajo")
#Condiciones de trabajo
data_proc$lugar_trab = set_label(data_proc$lugar_trab, "Lugar de trabajo")
data_proc$cond_vacaciones = set_label(data_proc$cond_vacaciones, "Derecho a vacaciones")
data_proc$cond_maternidad = set_label(data_proc$cond_maternidad, "Derecho a dias pagos por pa/maternidad")
data_proc$cond_guarderia = set_label(data_proc$cond_guarderia, "Derecho a guarderia infantil")
#Cronopiedad
data_proc$horas <- set_label(data_proc$horas, 'Total horas semanales habituales en actividad principal')
#Diseño muestral
data_proc$exp <- set_label(data_proc$exp, 'Ponderador')
#Socio-demográficas
data_proc$sexo <- set_label(data_proc$sexo, 'Sexo')
data_proc$educacion <- set_label(data_proc$educacion, 'Educacion')
condiciones <- data_proc %>%
select(10:14)
sjPlot::view_df(condiciones)
cronopiedad <- data_proc %>%
select(15)
sjPlot::view_df(cronopiedad)
frq(data_proc$horas)
demograficas <- data_proc %>%
select(16:18)
sjPlot::view_df(demograficas)
rm(condiciones, cronopiedad, demograficas, inestabilidad, inseguridad, insuficiencia)
saveRDS(data_proc,file = "input/data/data_proc.rds")
saveRDS(data_proc, "input/data/data_proc.rds")
?saveRDS
saveRDS(data_proc, file = "../input/data/data_proc.rds")
saveRDS(data_proc, file = "../input/data/data_proc.rds")
pacman::p_load(tidyverse, #Muchas cosas
haven, #Cargar datos.dta
sjPlot, #Crear tablas y gráficos
sjmisc,#Explorar datos
dplyr, #Manipular datos
sjlabelled, #Etiquetar datos
car) #Recodificar
data <- read_dta("https://www.ine.cl/docs/default-source/encuesta-suplementaria-de-ingresos/bbdd/stata_esi/2020/esi-2020---personas.dta?sfvrsn=7a4b0e2b_4&amp;download=true")
data_proc <- data %>%
filter(b13_rev4cl_caenes != 1 |
b13_rev4cl_caenes != 2 |
b13_rev4cl_caenes != 3 |
b13_rev4cl_caenes != 6) %>%
select(exp = fact_cal_esi,
id = idrph,
contrato = b8,
contrato_duracion = b9,
contrato_sub = b12,
cotiza_prev = b7a_1,
cotiza_salud = b7a_2,
cotiza_seguro = b7a_3,
ingresos = ing_t_p,
lugar_trab = b16,
cond_vacaciones = b7b_1,
cond_enfermedad = b7b_2,
cond_maternidad = b7b_3,
cond_guarderia = b7b_4,
horas = c2_1_3,
sexo,
edad,
educacion = cine)
#Calcular cuantiles para recodificar ingresos
quantile(data_proc$ingresos, c(.2,.4,.6,.8))
data_proc <- data_proc %>%
mutate_at(vars(-c(exp, id, edad)), ~(as.numeric(.))) %>%
mutate(ingresos = case_when(ingresos <= 291974 ~ "$0 a $291.974",
ingresos > 291974 & ingresos <= 380500 ~ "$291.975 a $380.500",
ingresos > 380500 & ingresos <= 500000 ~ "$380.501 a $500.000",
ingresos > 500000 & ingresos <= 779787 ~ "$500.001 a $779.787",
ingresos > 779787 ~ "$779.788 o mas",
TRUE ~ NA_character_),
horas = case_when(horas <= 30 ~ "Igual o menor a 30 horas semanales",
horas > 30 & horas <= 45 ~ "Entre 31 y 45 horas semanales",
horas > 45 ~ "Mayor a 45 horas semanales",
TRUE ~ NA_character_),
contrato = car::recode(.$contrato, recodes = c("1 = 'Si'; 2 = 'No'"),
as.factor = T, levels = c('Si', 'No')),
contrato_duracion = car::recode(.$contrato_duracion, recodes = c("1 = 'Definido'; 2 = 'Indefinido'"),
as.factor = T, levels = c('Definido', 'Indefinido')),
contrato_sub = car::recode(.$contrato_sub, recodes = c("1 = 'Directamente con la empresa en donde trabaja';
2 = 'Con un contratista o subcontratista de bienes y servicios';
3 = 'Con una empresa de servicios temporales o suministradora de trabajadores';
4 = 'Con un enganchador (contratista agrícola)'"),
as.factor = T, levels = c('Directamente con la empresa en donde trabaja',
'Con un contratista o subcontratista de bienes y servicios',
'Con una empresa de servicios temporales o suministradora de trabajadores',
'Con un enganchador (contratista agrícola)')),
lugar_trab = car::recode(.$lugar_trab, recodes = c("1 = 'En instalaciones u oficina del cliente o empleador';
2 = 'En la casa del empleador o cliente';
3 = 'En instalaciones u oficinas propias o arrendadas';
4 = 'En la oficina, local, taller o fabrica, anexo a su hogar (en el mismo predio)';
5 = 'En su propio hogar';
6 = 'En la calle o via publica';
7 = 'En obras de construccion, mineras o similares';
8 = 'En un predio agricola o espacio maritimo o aereo';
9 = 'En otros lugares'"),
as.factor = T, levels = c('En instalaciones u oficina del cliente o empleador',
'En la casa del empleador o cliente',
'En instalaciones u oficinas propias o arrendadas',
'En la oficina, local, taller o fabrica, anexo a su hogar (en el mismo predio)',
'En su propio hogar',
'En la calle o via publica',
'En obras de construccion, mineras o similares',
'En un predio agricola o espacio maritimo o aereo',
'En otros lugares')),
sexo = car::recode(.$sexo, recodes = c("1 = 'Hombre'; 2 = 'Mujer'"), as.factor = T,
levels = c('Hombre', 'Mujer')),
educacion = car::recode(.$educacion, recodes = c("1 = 'Nunca estudio';
2 = 'Educacion preescolar';
3 = 'Educacion primaria (nivel 1)';
4 = 'Educacion primaria (nivel 2)';
5 = 'Educacion secundaria';
6 = 'Educacion tecnica (superior no universitaria)';
7 = 'Educacion universitaria';
8 = 'Postitulos y maestria';
9 = 'Doctorado'"),
as.factor = T,
levels = c('Nunca estudio',
'Educacion preescolar',
'Educacion primaria (nivel 1)',
'Educacion primaria (nivel 2)',
'Educacion secundaria',
'Educacion tecnica (superior no universitaria)',
'Educacion universitaria',
'Postitulos y maestria',
'Doctorado'))) %>%
mutate_at(vars("cond_vacaciones", "cond_enfermedad", "cond_maternidad", "cond_guarderia", "cotiza_prev", "cotiza_salud", "cotiza_seguro"), ~(car::recode(., recodes = c("1 = 'Si'; 2 = 'No'"), as.factor = T))) %>%
mutate(ingresos = factor(.$ingresos, levels = c("$0 a $291.974",
"$291.975 a $380.500",
"$380.501 a $500.000",
"$500.001 a $779.787",
"$779.788 o más")),
horas = factor(.$horas, levels = c("Igual o menor a 30 horas semanales",
"Entre 31 y 45 horas semanales",
"Mayor a 45 horas semanales"))) %>%
mutate_at(vars("contrato", "contrato_duracion", "contrato_sub", "cotiza_prev", "cotiza_salud", "cotiza_seguro", "lugar_trab", "cond_vacaciones", "cond_enfermedad", "cond_maternidad", "cond_guarderia"), ~(car::recode(., recodes = "c(77, 88, 99) = NA"))) %>%
mutate_at(vars(c("horas", "educacion")), ~(car::recode(., recodes = "c(888, 999) = NA")))
sum(is.na(data_proc))
dim(data_proc)
data_proc <-na.omit(data_proc)
dim(data_proc)
#(In)estabilidad
data_proc$contrato = set_label(data_proc$contrato, "Existencia de contrato")
data_proc$contrato_duracion = set_label(data_proc$contrato_duracion, "Duracion de contrato")
data_proc$contrato_sub = set_label(data_proc$contrato_sub, "Acuerdo de trabajo")
#(In)seguridad
data_proc$cotiza_prev = set_label(data_proc$cotiza_prev, "Cotizacion en prevision")
data_proc$cotiza_salud = set_label(data_proc$cotiza_salud, "Cotizacion en salud")
data_proc$cotiza_seguro = set_label(data_proc$cotiza_seguro, "Cotizacion en seguro de desempleo")
#(In)suficiencia
data_proc$ingresos = set_label(data_proc$ingresos, "Quintiles de ingreso")
#Condiciones de trabajo
data_proc$lugar_trab = set_label(data_proc$lugar_trab, "Lugar de trabajo")
data_proc$cond_vacaciones = set_label(data_proc$cond_vacaciones, "Derecho a vacaciones")
data_proc$cond_enfermedad = set_label(data_proc$cond_enfermedad, "Derecho a dias pagos por enfermedad")
data_proc$cond_maternidad = set_label(data_proc$cond_maternidad, "Derecho a dias pagos por pa/maternidad")
data_proc$cond_guarderia = set_label(data_proc$cond_guarderia, "Derecho a guarderia infantil")
#Cronopiedad
data_proc$horas <- set_label(data_proc$horas, 'Total horas semanales habituales en actividad principal')
#Diseño muestral
data_proc$exp <- set_label(data_proc$exp, 'Ponderador')
data_proc$id <- set_label(data_proc$id, 'Identificador')
#Socio-demográficas
data_proc$sexo <- set_label(data_proc$sexo, 'Sexo')
data_proc$edad <- set_label(data_proc$edad, 'Edad')
data_proc$educacion <- set_label(data_proc$educacion, 'Educacion')
# (In)estabilidad
inestabilidad <- data_proc %>%
select(3:5)
inseguridad <- data_proc %>%
select(6:8)
insuficiencia <- data_proc %>%
select(9)
condiciones <- data_proc %>%
select(10:14)
cronopiedad <- data_proc %>%
select(15)
demograficas <- data_proc %>%
select(16:18)
sjPlot::view_df(inestabilidad,
file = "output/tablas/inestabilidad.doc")
sjPlot::view_df(inestabilidad,
file = "output/tablas/inestabilidad.doc")
sjPlot::view_df(inseguridad,
file = "output/tablas/inseguridad.doc")
sjPlot::view_df(insuficiencia,
file = "output/tablas/insuficiencia.doc")
sjPlot::view_df(condiciones,
file = "output/tablas/condiciones.doc")
sjPlot::view_df(cronopiedad,
file = "output/tablas/cronopiedad.doc")
sjPlot::view_df(demograficas,
file = "output/tablas/demograficas.doc")
rm(condiciones, cronopiedad, demograficas, inestabilidad, inseguridad, insuficiencia, data)
saveRDS(data_proc, file = "input/data/data_proc.rds")
pacman::p_load(summarytools,
poLCA,
xtable)
base_proc <- readRDS("../input/data/data_proc.rds")
view(summarytools::dfSummary(base_proc, headings=FALSE))
f<-cbind(contrato,
contrato_duracion,
contrato_sub,
cotiza_prev,
cotiza_salud,
cotiza_seguro,
ingresos,
lugar_trab,
cond_vacaciones,
cond_enfermedad,
cond_maternidad,
cond_guarderia,
horas) ~ 1 # model
lc2=poLCA(f, base_proc, nclass=2, graphs = F, nrep = 3, maxiter = 5000)
set.seed(123741) # para mantener el mismo orden de las clases
View(lc2)
lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc5=poLCA(f, base_proc, nclass=5, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc6=poLCA(f, base_proc, nclass=6, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc7=poLCA(f, base_proc, nclass=7, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc8=poLCA(f, base_proc, nclass=8, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc5=poLCA(f, base_proc, nclass=5, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc6=poLCA(f, base_proc, nclass=6, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc7=poLCA(f, base_proc, nclass=7, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc8=poLCA(f, base_proc, nclass=8, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc12=poLCA(f, base_proc, nclass=12, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
fit.lc2 <- data.frame(Modell=c("Model lc2"),
BIC                         =lc2$bic,
AIC                        = lc2$aic)
fit.lc3 <- data.frame(Modell=c("Model lc3"),
BIC                         =lc3$bic,
AIC                        = lc3$aic)
fit.lc4 <- data.frame(Modell=c("Model lc4"),
BIC                         =lc4$bic,
AIC                        = lc4$aic)
fit.lc5 <- data.frame(Modell=c("Model lc5"),
BIC                         =lc5$bic,
AIC                        = lc5$aic)
fit.lc6 <- data.frame(Modell=c("Model lc6"),
BIC                         =lc6$bic,
AIC                        = lc6$aic)
fit.lc7 <- data.frame(Modell=c("Model lc7"),
BIC                         =lc7$bic,
AIC                        = lc7$aic)
fit.lc8 <- data.frame(Modell=c("Model lc8"),
BIC                         =lc8$bic,
AIC                        = lc8$aic)
fit.lc9 <- data.frame(Modell=c("Model lc9"),
BIC                         =lc9$bic,
AIC                        = lc9$aic)
fit.lc10 <- data.frame(Modell=c("Model lc10"),
BIC                         =lc10$bic,
AIC                        = lc10$aic)
fit.lc11 <- data.frame(Modell=c("Model lc11"),
BIC                         =lc11$bic,
AIC                        = lc11$aic)
fit.lc12 <- data.frame(Modell=c("Model lc12"),
BIC                         =lc12$bic,
AIC                        = lc12$aic)
comp.fit.lca=rbind(fit.lc2,fit.lc3, fit.lc4,fit.lc5, fit.lc6, fit.lc7, fit.lc8, fit.lc9, fit.lc10, fit.lc11, fit.lc12)
print(xtable(comp.fit.lca), type="html")
data.frame(comp.fit.lca)
p2<-1-pchisq(lc2$Chisq, lc2$resid.df)
p3<-1-pchisq(lc3$Chisq, lc3$resid.df)
p4<-1-pchisq(lc4$Chisq, lc4$resid.df)
p5<-1-pchisq(lc5$Chisq, lc5$resid.df)
p6<-1-pchisq(lc6$Chisq, lc6$resid.df)
p7<-1-pchisq(lc7$Chisq, lc7$resid.df)
p8<-1-pchisq(lc8$Chisq, lc8$resid.df)
p9<-1-pchisq(lc9$Chisq, lc9$resid.df)
p10<-1-pchisq(lc10$Chisq, lc10$resid.df)
p11<-1-pchisq(lc11$Chisq, lc11$resid.df)
p12<-1-pchisq(lc12$Chisq, lc12$resid.df)
View(lc2)
ajuste <- data.frame (
c("lc2", "lc3", "lc4", "lc5", "lc6","lc7", "lc8", "lc9", "lc10", "lc11", "lc12"),
c(lc2$llik, lc3$llik, lc4$llik, lc5$llik, lc6$llik, lc7$llik, lc8$llik, lc9$llik, lc10$llik, lc11$llik, lc12$llik),
c(lc2$Chisq, lc3$Chisq, lc4$Chisq, lc5$Chisq, lc6$Chisq, lc7$Chisq, lc8$Chisq,lc9$Chisq, lc10$Chisq, lc11$Chisq, lc12$Chisq),
c(lc2$Gsq, lc3$Gsq, lc4$Gsq, lc5$Gsq, lc6$Gsq, lc7$Gsq, lc8$Gsq, lc9$Gsq, lc10$Gsq, lc11$Gsq, lc12$Gsq),
c(lc2$npar, lc3$npar, lc4$npar, lc5$npar, lc6$npar, lc7$npar, lc8$npar, lc9$npar, lc10$npar, lc11$npar,lc12$npar),
c(lc2$aic, lc3$aic, lc4$aic, lc5$aic, lc6$aic, lc7$aic, lc8$aic, lc9$aic, lc10$aic, lc11$aic, lc12$aic),
c(lc2$bic, lc3$bic, lc4$bic, lc5$bic, lc6$bic, lc7$bic, lc8$bic, lc9$bic, lc10$bic, lc11$bic, lc12$bic),
c(p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12))
colnames(ajuste)<-c("Modelo", "Loglike", "X2", "G2", "DF", "AIC", "BIC", "P-value")
View(ajuste)
p2<-1-pchisq(lc2@Chisq, lc2@resid.df)
pacman::p_load(summarytools,
poLCA,
xtable,
sjPlot,
reshape2,
ggplot2)
base_proc <- readRDS("../input/data/data_proc.rds")
view(summarytools::dfSummary(base_proc, headings=FALSE))
f<-cbind(contrato,
contrato_duracion,
contrato_sub,
cotiza_prev,
cotiza_salud,
cotiza_seguro,
ingresos,
lugar_trab,
cond_vacaciones,
cond_enfermedad,
cond_maternidad,
cond_guarderia,
horas) ~ 1 # model
lc1=poLCA(f, base_proc, nclass=1, graphs = F, nrep = 3, maxiter = 5000)
lc1=poLCA(f, base_proc, nclass=1, graphs = F, nrep = 3, maxiter = 5000)
set.seed(123741) # para mantener el mismo orden de las clases
lc2=poLCA(f, base_proc, nclass=2, graphs = F, nrep = 3, maxiter = 5000)
lc2=poLCA(f, base_proc, nclass=2, graphs = F, nrep = 3, maxiter = 5000)
lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc3=poLCA(f, base_proc, nclass=3, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc4=poLCA(f, base_proc, nclass=4, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc5=poLCA(f, base_proc, nclass=5, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc6=poLCA(f, base_proc, nclass=6, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc7=poLCA(f, base_proc, nclass=7, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc8=poLCA(f, base_proc, nclass=8, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc9=poLCA(f, base_proc, nclass=9, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc10=poLCA(f, base_proc, nclass=10, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc11=poLCA(f, base_proc, nclass=11, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
lc12=poLCA(f, base_proc, nclass=12, graphs = F, maxiter = 5000, nrep = 3, tol=0.000001000)
AIC.1 <-as.numeric(lc1$aic)
AIC.2 <-as.numeric(lc2$aic)
AIC.3 <-as.numeric(lc3$aic)
AIC.4 <-as.numeric(lc4$aic)
AIC.5 <-as.numeric(lc5$aic)
AIC.6 <-as.numeric(lc6$aic)
AIC.7 <-as.numeric(lc7$aic)
AIC.8 <-as.numeric(lc8$aic)
AIC.9 <-as.numeric(lc9$aic)
AIC.10 <-as.numeric(lc10$aic)
AIC.11 <-as.numeric(lc11$aic)
AIC.12 <-as.numeric(lc12$aic)
BIC.1 <-as.numeric(lc1$bic)
BIC.2 <-as.numeric(lc2$bic)
BIC.3 <-as.numeric(lc3$bic)
BIC.4 <-as.numeric(lc4$bic)
BIC.5 <-as.numeric(lc5$bic)
BIC.6 <-as.numeric(lc6$bic)
BIC.7 <-as.numeric(lc7$bic)
BIC.8 <-as.numeric(lc8$bic)
BIC.9 <-as.numeric(lc9$bic)
BIC.10 <-as.numeric(lc10$bic)
BIC.11 <-as.numeric(lc11$bic)
BIC.12 <-as.numeric(lc12$bic)
llik.1 <-as.numeric(lc1$llik)
llik.2 <-as.numeric(lc2$llik)
llik.3 <-as.numeric(lc3$llik)
llik.4 <-as.numeric(lc4$llik)
llik.5 <-as.numeric(lc5$llik)
llik.6 <-as.numeric(lc6$llik)
llik.7 <-as.numeric(lc7$llik)
llik.8 <-as.numeric(lc8$llik)
llik.9 <-as.numeric(lc9$llik)
llik.10 <-as.numeric(lc10$llik)
llik.12 <-as.numeric(lc12$llik)
chisq.1 <- as.numeric(lc2$Chisq)
chisq.1 <- as.numeric(lc2$Chisq)
chisq.2 <- as.numeric(lc2$Chisq)
chisq.4 <- as.numeric(lc4$Chisq)
chisq.5 <- as.numeric(lc5$Chisq)
chisq.6 <- as.numeric(lc6$Chisq)
chisq.7 <- as.numeric(lc7$Chisq)
chisq.8 <- as.numeric(lc8$Chisq)
chisq.9 <- as.numeric(lc9$Chisq)
chisq.10 <- as.numeric(lc10$Chisq)
chisq.11 <- as.numeric(lc11$Chisq)
chisq.12 <- as.numeric(lc12$Chisq)
G.1 <- as.numeric(lc1$Gsq)
G.2 <- as.numeric(lc2$Gsq)
G.3 <- as.numeric(lc3$Gsq)
G.5 <- as.numeric(lc5$Gsq)
G.6 <- as.numeric(lc6$Gsq)
G.7 <- as.numeric(lc7$Gsq)
G.9 <- as.numeric(lc9$Gsq)
G.10 <- as.numeric(lc10$Gsq)
G.12 <- as.numeric(lc12$Gsq)
n.obs1 <- as.numeric(lc1$Nobs)
n.obs3 <- as.numeric(lc3$Nobs)
n.obs4 <- as.numeric(lc4$Nobs)
n.obs6 <- as.numeric(lc6$Nobs)
n.obs7 <- as.numeric(lc7$Nobs)
n.obs8 <- as.numeric(lc8$Nobs)
n.obs9 <- as.numeric(lc9$Nobs)
n.obs11 <- as.numeric(lc11$Nobs)
n.obs12 <- as.numeric(lc12$Nobs)
#Creación de Vectores para TABLA DE COMPARACIÓN
AIC <- c(AIC.1, AIC.2,AIC.3,AIC.4,AIC.5, AIC.6, AIC.7, AIC.8, AIC.9, AIC.10, AIC.11, AIC.12)
BIC <- c(BIC.1, BIC.2,BIC.3,BIC.4,BIC.5, BIC.6, BIC.7, BIC.8, BIC.9, BIC.10, BIC.11, BIC.12)
llik <- c(llik.1, llik.2,llik.3,llik.4,llik.5, llik.6, llik.7, llik.8, llik.9, llik.10, llik.11, llik.12)
chi.cuadrado <- c(chisq.1, chisq.2,chisq.3,chisq.4,chisq.5, chisq.6, chisq.7, chisq.8, chisq.9, chisq.10, chisq.11, chisq.12)
chisq.3 <- as.numeric(lc3$Chisq)
llik.11 <-as.numeric(lc11$llik)
#Creación de Vectores para TABLA DE COMPARACIÓN
AIC <- c(AIC.1, AIC.2,AIC.3,AIC.4,AIC.5, AIC.6, AIC.7, AIC.8, AIC.9, AIC.10, AIC.11, AIC.12)
BIC <- c(BIC.1, BIC.2,BIC.3,BIC.4,BIC.5, BIC.6, BIC.7, BIC.8, BIC.9, BIC.10, BIC.11, BIC.12)
llik <- c(llik.1, llik.2,llik.3,llik.4,llik.5, llik.6, llik.7, llik.8, llik.9, llik.10, llik.11, llik.12)
chi.cuadrado <- c(chisq.1, chisq.2,chisq.3,chisq.4,chisq.5, chisq.6, chisq.7, chisq.8, chisq.9, chisq.10, chisq.11, chisq.12)
G2 <- c(G.1, G.2,G.3,G.4,G.5, G.6, G.7, G.8, G.9, G.10, G.11, G.12)
G.4 <- as.numeric(lc4$Gsq)
G2 <- c(G.1, G.2,G.3,G.4,G.5, G.6, G.7, G.8, G.9, G.10, G.11, G.12)
G.8 <- as.numeric(lc8$Gsq)
G.9 <- as.numeric(lc9$Gsq)
G.10 <- as.numeric(lc10$Gsq)
G.11 <- as.numeric(lc11$Gsq)
G.12 <- as.numeric(lc12$Gsq)
n.obs1 <- as.numeric(lc1$Nobs)
n.obs2 <- as.numeric(lc2$Nobs)
n.obs3 <- as.numeric(lc3$Nobs)
n.obs4 <- as.numeric(lc4$Nobs)
n.obs5 <- as.numeric(lc5$Nobs)
n.obs6 <- as.numeric(lc6$Nobs)
n.obs8 <- as.numeric(lc8$Nobs)
n.obs9 <- as.numeric(lc9$Nobs)
n.obs10 <- as.numeric(lc10$Nobs)
n.obs11 <- as.numeric(lc11$Nobs)
n.obs12 <- as.numeric(lc12$Nobs)
G2 <- c(G.1, G.2,G.3,G.4,G.5, G.6, G.7, G.8, G.9, G.10, G.11, G.12)
N <- c(n.obs1, n.obs2,n.obs3,n.obs4,n.obs5, n.obs6, n.obs7, n.obs8, n.obs9, n.obs10, n.obs11, n.obs12)
Modelos <- c("1 clase","2 clases", "3 clases", "4 clases", "5 clases", "6 clases", "7 clases", "8 clases", "9 clases", "10 clases", "11 clases", "12 clases")
#CREACIÓN TABLA ESTADÍSTICOS DE AJUSTE MODELOS TODAS LAS VARIABLES
fit.indices <- data.frame(Modelos,AIC,BIC,llik,chi.cuadrado,G2,N)
sjPlot::tab_df(fit.indices)
?tab_df
sjPlot::tab_df(fit.indices,
title = "Medidas de ajuste para modelos de clase latente")
sjPlot::tab_df(fit.indices,
title = "Medidas de ajuste para modelos de clase latente",
footnote = "Elaboración propia en base a ESI (2021)")
sjPlot::tab_df(fit.indices,
title = "Medidas de ajuste para modelos de clase latente",
footnote = "Elaboración propia en base a ESI (2021)",
show.footnote = T)
sjPlot::tab_df(fit.indices,
title = "Medidas de ajuste para modelos de clase latente",
footnote = "Elaboracion propia en base a ESI (2021)",
show.footnote = T)
sjPlot::tab_df(fit.indices,
title = "Medidas de ajuste para modelos de clase latente",
footnote = "Elaboracion propia en base a ESI (2021)",
col.header = c("Modelos", "AIC", "BIC", "Log-likelihood", "Chi^2", "G2", "N"),
show.footnote = T)
